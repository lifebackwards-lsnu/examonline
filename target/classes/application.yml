#-----------------------------tomcat配置---start--------------------------------<<<<<<
#tomcat端口号
server:
  port: 8081
  #context-path: examonline
  tomcat:
    uri-encoding: UTF-8
    max-threads: 1000
    max-connections: 20000
eureka:
  client:
    service-url:
          defaultZone: http://localhost:8080/eureka/
           #defaultZone: http://10.50.2.1:8080/eureka/,http://10.50.2.2:8080/eureka/,http://10.50.2.3:8080/eureka/
     #表示是否将自己注册到Eureka Server，默认为true。
    register-with-eureka: true
     #表示是否从Eureka Server获取注册信息，默认为true。 
    fetch-registry: true       
  instance:
    prefer-ip-address: true #使用ip地址
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    # 每间隔10s，向服务端发送一次心跳，证明自己依然”存活“
    lease-renewal-interval-in-seconds: 10
    # 告诉服务端，如果我60s之内没有给你发心跳，就代表我“死”了，将我踢出掉。
    lease-expiration-duration-in-seconds: 60 

#----------------------------------end----------------------------------------->>>>>>
# 设置连接超时时间
ribbon: 
  ConnectTimeout: 1000
# 设置读取超时时间
  ReadTimeout: 6000
# 对所有操作请求都进行重试
  OkToRetryOnAllOperations: false
# 切换实例的重试次数
  MaxAutoRetriesNextServer: 1
# 对当前实例的重试次数
  MaxAutoRetries: 1   
  eager-load.enabled: true
  eager-load.clients: tbIetp-ticketPrice, tbIetp-userApp


feign:
  hystrix:
    enabled: false
  okhttp:
    enabled: true

#--------------------------------2.数据源连接配置---start-----------------------------
spring:
    application:
        name: examonline
    datasource:
         name: test

         url: jdbc:mysql://127.0.0.1:3306/exam_online?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
         username: root
         password: 123456
        # 使用druid数据源
         type: com.alibaba.druid.pool.DruidDataSource
         driver-class-name: com.mysql.jdbc.Driver
        
         filters: stat,wall,slf4j
         maxActive: 300
         initialSize: 5
         maxWait: 6000
         minIdle: 5
         timeBetweenEvictionRunsMillis: 60000
         minEvictableIdleTimeMillis: 300000
         validationQuery: select 1 from dual
         testWhileIdle: true
         testOnBorrow: false
         testOnReturn: false
         poolPreparedStatements: true
         maxPoolPreparedStatementPerConnectionSize: 20
         maxOpenPreparedStatements: 100
         remove-abandoned: true
         remove-abandoned-timeout: 80
         log-abandoned: true
         keep-alive: true
         queryTimeout: 1000
         connectionProperties: mysql.jdbc.ReadTimeout=2000;oracle.net.CONNECT_TIMEOUT=1000;druid.stat.mergeSql=true;druid.stat.slowSqlMillis=8000
 #--------------------------------2.Redis配置-------------------------------- 
    redis:
        #Redis数据库索引（默认为0）
        database: 0
        ## Redis服务器地址
        host: 192.168.57.129
        ## Redis服务器连接端口
        port: 6379
        ## Redis服务器连接密码（默认为空）
        password: 
        # 连接超时时间（毫秒）
        timeout: 1000s # 数据库连接超时时间，2.0 中该参数的类型为Duration，这里在配置的时候需要指明单位
        jedis:
          pool:
            # 最大空闲连接数
            max-idle: 500
            # 最小空闲连接数
            min-idle: 50
            # 等待可用连接的最大时间，负数为不限制
            max-wait: -1
            # 最大活跃连接数，负数为不限制
            max-active: -1
         
    thymeleaf:
      cache: false # 开发时关闭缓存,不然没法看到实时页面
      mode: HTML # 用非严格的 HTML
      encoding: UTF-8
      servlet:
        content-type: text/html
        
    cache:
        redis:
          time-to-live: -1 #毫秒

# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
#是否启用StatViewServlet默认值true
spring.datasource.druid.stat-view-servlet.enabled: true
spring.datasource.druid.stat-view-servlet.url-pattern: /druid/*
spring.datasource.druid.stat-view-servlet.reset-enable: false
spring.datasource.druid.stat-view-servlet.login-username: admin
spring.datasource.druid.stat-view-servlet.login-password: admin



#spring.datasource.druid.timeBetweenLogStatsMillis: 60000
spring.datasource.druid.filter.slf4j.enabled: true 
spring.datasource.druid.filter.slf4j.statement-create-after-log-enabled: false 
spring.datasource.druid.filter.slf4j.statement-close-after-log-enabled: false 
spring.datasource.druid.filter.slf4j.result-set-open-after-log-enabled: false 
spring.datasource.druid.filter.slf4j.result-set-close-after-log-enabled: false



#------------------------------------end----------------------------------------->>>>>>   

        
#----------------------------------end------------------------------------------->>>>>>        
        
        
#----------------------------日志配置-----start-------------------------------------<<<<<<

spring.profiles.active: production 
logging.level.org.springframework.web: debug 
#---------------------------------------end-------------------------------------->>>>>>

#---------------------------mybatis配置文件------------------------------------
mybatis:
  #指定映射文件
  mapper-locations: classpath:mapper/*.xml
  #指定bean所在包
  type-aliases-package: com.lsnu.model
   
mapper:
  mappers:  com.lsnu.dao
  not-empty: false
  identity: mysql


#mybatis分页插件
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
  returnPageInfo: check
#------------------------------------------end----------------------------------->>>>>>

   
   
#--------------------------------------模板引擎配置-----start-----------------------<<<<<<  
# 定位模板的目录
spring.mvc.view.prefix: classpath:/templates/
# 给返回的页面添加后缀名
spring.mvc.view.suffix: .html   
#-----------------------------------end----------------------------------------->>>>>>  


#-----------------------------------热部署配置------start---------------------------<<<<<<
#热部署生效
spring.devtools.restart.enabled: true
#设置重启的目录
#spring.devtools.restart.additional-paths: src/main/java
#classpath目录下的WEB-INF文件夹内容修改不重启
spring.devtools.restart.exclude: WEB-INF/**
#------------------------------------------------end----------------------------->>>>>>
